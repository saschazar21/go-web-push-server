name: Release

on:
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  changelog:
    name: Changelog
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    uses: ./.github/workflows/changelog.yml
    with:
      args: -v --bump

  tag:
    name: Tag
    runs-on: ubuntu-latest
    needs:
      - changelog

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Create Tag
        id: tag
        run: |
          echo "${{ needs.changelog.outputs.content }}" > CHANGELOG.md

          git config user.name 'github-actions[bot]'
          git config user.email 'github-actions[bot]@users.noreply.github.com'
          set +e
          git add CHANGELOG.md
          git commit -m "Update CHANGELOG.md [skip ci]"
          git push

          git tag ${{ needs.changelog.outputs.version }}
          git push origin tag ${{ needs.changelog.outputs.version }}

  changes:
    name: Latest Changes
    needs:
      - tag

    uses: ./.github/workflows/changelog.yml
    with:
      args: -v --latest --strip all

  compile:
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    name: VAPID Key Generator
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        os:
          - darwin
          - linux
          - windows
        arch:
          - amd64
          - arm64
        include:
          - os: linux
            arch: arm
            ver: 6
          - os: linux
            arch: arm
            ver: 7

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
          check-latest: true
          cache-dependency-path: |
            go.sum

      - name: Compile
        id: compile
        env:
          GOARCH: ${{ matrix.arch }}
          GOOS: ${{ matrix.os }}
        run: |
          filename="vapid-keygen_$GOOS"

          case $GOARCH in

            amd64)
              filename="$filename-x64"
              ;;

            arm64)
              filename="$filename-$GOARCH"
              ;;

            *)
              filename="$filename-armv${{ matrix.ver }}"
              ;;

          esac

          if [ $GOOS == windows ]; then
            filename="$filename.exe"
          fi

          if [ $GOOS == linux && $GOARCH == arm ]; then
            GOARM=${{ matrix.ver }} go build -o $filename cli/main.go
          else
            go build -o $filename cli/main.go
          fi

          echo "filename=$filename" >> $GITHUB_OUTPUT

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.compile.outputs.filename }}
          overwrite: true
          path: ${{ steps.compile.outputs.filename }}
          retention-days: 1
          compression-level: 0

  release:
    name: Release
    runs-on: ubuntu-latest
    needs:
      - changes
      - compile

    steps:
      - name: Download Artifacts
        id: download
        uses: actions/download-artifact@v4

      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          body: ${{ needs.changes.outputs.content }}
          tag_name: ${{ needs.changes.outputs.version }}
          fail_on_unmatched_files: true
          files: |
            ${{ steps.download.outputs.download-path }}/*/vapid-keygen_*
