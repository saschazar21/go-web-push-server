name: Deploy

on:
  push:
    branches:
      - main
  pull_request:
    types:
      - opened
      - synchronize

env:
  ENABLE_DEMO: true

jobs:
  outputs:
    name: "Set outputs"
    uses: ./.github/workflows/outputs.yml

  test:
    name: "Run unit tests"
    uses: ./.github/workflows/test.yml

  deploy-netlify:
    name: "Deploy to Netlify"
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    env:
      NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
      NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
    needs:
      - outputs
      - test
    outputs:
      data: ${{ steps.deploy.outputs.data }}

    steps:
      - name: Check out repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up pnpm
        uses: pnpm/action-setup@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: ".tool-versions"
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
          check-latest: true
          cache-dependency-path: |
            go.sum

      - name: Set variables
        id: var
        run: |
          prod_flag="--prod"
          context_flag="--context=production"
          alias_flag=""

          if [[ ${{ github.event.pull_request.state == 'open'}} ]]; then
            prod_flag=""
            context_flag="--context=deploy_preview"
            alias_flag="--alias=${{ needs.outputs.outputs.short_sha }}"
          fi

          echo "prod_flag=$prod_flag" >> $GITHUB_OUTPUT
          echo "context_flag=$context_flag" >> $GITHUB_OUTPUT
          echo "alias_flag=$alias_flag" >> $GITHUB_OUTPUT

      - name: Deploy to Netlify
        id: deploy
        run: |
          deploy_message="${{ needs.outputs.outputs.short_sha }} â€“ $(git log -1 --pretty=format:"%s")"

          netlify deploy \
            --build \
            ${{ steps.var.outputs.prod_flag }} \
            ${{ steps.var.outputs.context_flag }} \
            ${{ steps.var.outputs.alias_flag }} \
            --message=$deploy_message \
            --telemetry-disable \
            --json \
            > netlify.json

          echo "data=$(cat netlify.json)" >> $GITHUB_OUTPUT

  comment:
    name: "Comment on PR"
    needs:
      - deploy-netlify
    permissions:
      pull-requests: write
    uses: ./.github/workflows/comment.yml
    with:
      netlify: ${{ needs.deploy-netlify.outputs.data }}
